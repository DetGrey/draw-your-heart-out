// -------------------------------------------------- FUNCTIONS
function setup() {
    let canvas = createCanvas(canvasWidth.value, canvasHeight.value);
    canvas.parent('sketch-holder');
    strokeWeight(4);
}

function draw() {
    if (mouseIsPressed) {
        stroke(rgb.r, rgb.g, rgb.b, opacity);
        line(pmouseX, pmouseY, mouseX,mouseY);
    }
}

function hexToRgb(hex) {
    let result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

// -------------------------------------------------- VARIABLES
let colorPicker = document.querySelector("#colour-picker");
let rgb = hexToRgb(colorPicker.value);
let opacity = 255;

let clearBtn = document.querySelector('#clear-btn');

let opacityValue = document.querySelector('#opacity');

let canvasWidth = {
    element: document.querySelector('#canvas-width'),
    value: 400
};
let canvasHeight = {
    element: document.querySelector('#canvas-height'),
    value: 400
};

let saveBtn = document.querySelector('#save-btn');
// -------------------------------------------------- ON CLICK/CHANGE
colorPicker.onchange = () => {
    rgb = hexToRgb(colorPicker.value);
}

clearBtn.addEventListener('click', () => {
    clear();
});

opacityValue.onchange = () => {
    opacity = opacityValue.value / 100 * 255;
}

canvasWidth.element.onchange = () => {
    alert(canvasWidth.element.value)
    if (canvasWidth.element.value < canvasWidth.element.min) {
        canvasWidth.element.value = canvasWidth.element.min;
    }
    else if (canvasWidth.element.value > canvasWidth.element.max) {
        canvasWidth.element.value = canvasWidth.element.max;
    }
    canvasWidth.value = canvasWidth.element.value;
    resizeCanvas(canvasWidth.value, canvasHeight.value);
}
canvasHeight.element.onchange = () => {
    if (canvasHeight.element.value < canvasHeight.element.min) {
        canvasHeight.element.value = canvasHeight.element.min;
    }
    else if (canvasHeight.element.value > canvasHeight.element.max) {
        canvasHeight.element.value = canvasHeight.element.max;
    }
    canvasHeight.value = canvasHeight.element.value;
    resizeCanvas(canvasWidth.value, canvasHeight.value);
}

saveBtn.addEventListener('click', () => {
    let getdate = new Date().toLocaleDateString().replaceAll('/', '-');
    alert(getdate);
    saveCanvas(getdate, 'jpg');
});

//switch () {
    // document.querySelector('#toolbar-top').innerHTML = '<div id="tb-home">
//       <p>brush</p>
//       <label for="colour-picker">
//         colour
//         <input id="colour-picker" type="color"/>
//       </label>
//       <label for="size">
//         size
//         <input id="size" type="number" min="1" max="100" value="4" onchange="strokeWeight(this.value)">
//       </label>
//       <label for="opacity">
//         opacity
//         <input id="opacity" type="range" min="0" max="100" value="100">
//       </label>
//       <label for="canvas-width">
//         width
//         <input id="canvas-width" type="number" min="1" max="100" onchange="changeOpacity()">
//         px
//       </label>
//       <label for="canvas-height">
//         height
//         <input id="canvas-height" type="number" min="1" max="100" onchange="changeOpacity()">
//         px
//       </label>
//
//       <button id="clear-btn">Clear</button>
//       <button id="save-btn">Save</button>
//     </div>'
// }

